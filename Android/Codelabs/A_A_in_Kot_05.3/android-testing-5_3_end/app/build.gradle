plugins {
    // Два первых стандрт обязательны для Котлина
    id 'com.android.application'
    id 'kotlin-android'
    // ???
    id 'kotlin-kapt'
    // Необходимо для класса передачи параметров в навигации проекта
    id "androidx.navigation.safeargs.kotlin"
    // Для использования идиом (краткая запись) Котлина и Андроида для Котлина
    //id 'kotlin-android-extensions'
    // kotlin-parcelize
}

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion '30.0.3'

    defaultConfig {
        //applicationId "com.example.android.architecture.blueprints.todoapp"
        applicationId "com.example.android.architecture.blueprints.reactive"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
     //  enabledForTests = true
      // построит из xml спецклассы java см. java (generated)
      dataBinding = true
     // viewBinding = true //будем использовать для других
    }
    dataBinding {
     //   enabled = true
        enabledForTests = true
    }
    // Always show the result of every unit test when running via command line, even if it passes.
    // Всегда показывайте результат каждого модульного теста при запуске через командную строку, даже если он проходит.
    // избавиться от ошибки  No such manifest file: ./AndroidManifest.xml - НЕ работает дает ошибку ROBO
    testOptions.unitTests {
        includeAndroidResources = true
        // Robolectric
        // RuntimeException c причиной — method not mocked при попытке запустить тест кода вызывающего какой — либо метод фреймворка.
        // А если использовать следующую опцию в Gradle -
        returnDefaultValues = true
        // то, RuntimeException брошен не будет. Такое поведение может приводить к тяжело детектируемым ошибкам в тестах.
        // необходим для поддержания работы модульных тестов при добавлении кода ресурса простоя в код приложения.
    }
}

dependencies {
    // App dependencies Зависимости приложений
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "androidx.cardview:cardview:$cardVersion"
    implementation "com.google.android.material:material:$materialVersion"
    implementation "androidx.fragment:fragment-ktx:$fragmentKtxVersion"
    implementation "androidx.recyclerview:recyclerview:$recyclerViewVersion"
    implementation "androidx.annotation:annotation:$androidXAnnotations"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    implementation "androidx.legacy:legacy-support-v4:$androidXLegacySupport"

    // Architecture Components
    implementation "androidx.room:room-ktx:$roomVersion"
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$archLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$archLifecycleVersion"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"

    implementation "com.jakewharton.timber:timber:$timberVersion"
    // AndroidX Test -JVM testing and Android instrumented unit tests
    // Dependencies for local unit tests
    // Зависимости для локальных модульных тестов
    // JUnit, который необходим для написания основных тестовых операторов.
    debugImplementation "androidx.fragment:fragment-testing:$fragmentVersion"
    implementation "androidx.test.espresso:espresso-idling-resource:$espressoVersion"

    // Dependencies for local unit tests
    testImplementation "junit:junit:$junitVersion"
    testImplementation "androidx.test.ext:junit-ktx:$androidXTestExtKotlinRunnerVersion"
    testImplementation "androidx.test:core-ktx:$androidXTestCoreVersion"
    testImplementation "androidx.arch.core:core-testing:$archTestingVersion"
    testImplementation "org.hamcrest:hamcrest-all:$hamcrestVersion"
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesTestVersion"


    androidTestImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit-ktx:$androidXTestExtKotlinRunnerVersion"
    androidTestImplementation "org.mockito:mockito-core:$mockitoVersion"
    androidTestImplementation "com.linkedin.dexmaker:dexmaker-mockito:$dexMakerVersion"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesTestVersion"

    // AndroidX Test - Instrumented testing Инструментальное тестирование
    androidTestImplementation "androidx.arch.core:core-testing:$archTestingVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"

}